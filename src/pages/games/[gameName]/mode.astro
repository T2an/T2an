---
import Layout from '../../../layouts/Layout.astro';
import { PrismaClient } from '@prisma/client';
import dotenv from 'dotenv';

dotenv.config();

let prisma;
if (process.env.NODE_ENV === 'production') {
  prisma = new PrismaClient();
} else {
  if (!global.prisma) {
    global.prisma = new PrismaClient();
  }
  prisma = global.prisma;
}

const { gameName } = Astro.params;

const game = await prisma.game.findUnique({
  where: { name: gameName },
  include: {
    questions: {
      select: {
        id: true
      }
    }
  }
});

if (!game || !game.isActive) {
  return Astro.redirect('/games');
}
---

<Layout title={`${game.title} - S√©lection du mode | Jeux`}>
  <div class="max-w-4xl mx-auto">
    <h1 class="text-4xl font-bold mb-8 text-terminal-green">$ quiz {gameName}</h1>
    
    <!-- Informations du jeu -->
    <div class="mb-8 p-6 bg-terminal-gray border border-terminal-green rounded">
      <h2 class="text-2xl font-bold mb-2">{game.title}</h2>
      <p class="text-gray-400 mb-4">{game.description}</p>
      <p class="text-sm text-terminal-green">{game.questions.length} questions disponibles</p>
    </div>
    
    <!-- S√©lection du mode -->
    <div class="text-center">
      <h3 class="text-2xl font-bold mb-6 text-terminal-green">üéÆ Choisissez votre mode de jeu</h3>
      
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto">
        <!-- Mode Aveugle -->
        <div class="mode-card p-6 bg-terminal-gray border-2 border-gray-600 rounded-lg hover:border-terminal-green transition-all duration-300 cursor-pointer group" data-mode="blind">
          <div class="text-4xl mb-4">üëÅÔ∏è</div>
          <h4 class="text-xl font-bold mb-3 text-terminal-green">Mode Aveugle</h4>
          <p class="text-gray-400 mb-4">Saisissez votre r√©ponse manuellement</p>
          <ul class="text-sm text-gray-500 space-y-2 text-left">
            <li>‚Ä¢ R√©ponse libre et pr√©cise</li>
            <li>‚Ä¢ Mode difficile et challengeant</li>
            <li>‚Ä¢ Validation stricte des r√©ponses</li>
            <li>‚Ä¢ Pour les experts !</li>
          </ul>
          <div class="mt-4 p-2 bg-black bg-opacity-20 rounded text-xs text-gray-400">
            Difficult√©: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
          </div>
        </div>
        
        <!-- Mode Normal -->
        <div class="mode-card p-6 bg-terminal-gray border-2 border-gray-600 rounded-lg hover:border-terminal-green transition-all duration-300 cursor-pointer group" data-mode="normal">
          <div class="text-4xl mb-4">üìù</div>
          <h4 class="text-xl font-bold mb-3 text-terminal-green">Mode Normal</h4>
          <p class="text-gray-400 mb-4">Choisissez parmi 4 propositions</p>
          <ul class="text-sm text-gray-500 space-y-2 text-left">
            <li>‚Ä¢ 4 choix de r√©ponses</li>
            <li>‚Ä¢ Mode accessible √† tous</li>
            <li>‚Ä¢ R√©ponses al√©atoires</li>
            <li>‚Ä¢ Parfait pour d√©buter !</li>
          </ul>
          <div class="mt-4 p-2 bg-black bg-opacity-20 rounded text-xs text-gray-400">
            Difficult√©: ‚≠ê‚≠ê
          </div>
        </div>
      </div>
      
      <!-- Bouton retour -->
      <div class="mt-8">
        <a href="/games" class="px-6 py-3 border border-gray-500 rounded hover:bg-terminal-gray transition-colors text-gray-400">
          ‚Üê Retour aux jeux
        </a>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Gestion des clics sur les cartes de mode
    const modeCards = document.querySelectorAll('.mode-card');
    
    modeCards.forEach(card => {
      card.addEventListener('click', () => {
        const mode = card.getAttribute('data-mode');
        selectMode(mode);
      });
      
      // Effet hover
      card.addEventListener('mouseenter', () => {
        card.style.transform = 'translateY(-5px)';
      });
      
      card.addEventListener('mouseleave', () => {
        card.style.transform = 'translateY(0)';
      });
    });
  });
  
  function selectMode(mode) {
    console.log('Mode s√©lectionn√©:', mode);
    
    // Construire l'URL de redirection
    const currentPath = window.location.pathname;
    const gamePath = currentPath.replace('/mode', '');
    const redirectUrl = `${gamePath}?mode=${mode}`;
    
    console.log('Redirection vers:', redirectUrl);
    
    // Rediriger
    window.location.href = redirectUrl;
  }
</script> 